---

- hosts: default
  become: true
  gather_facts: no

  tasks:
    - name: Installing Desktop Environment 
      apt:
        name: ubuntu-desktop
        state: latest
        update_cache: yes
    
    - name: Update all packages to the latest version
      apt:
        upgrade: dist

    - name: install (RDP) server
      apt:
        name: xrdp
        state: latest

    - name: enable service xrdp and ensure it is started
      systemd:
        name: xrdp
        enabled: yes
        state: started

    - name: Allow all access to tcp port 3389
      ufw:
        rule: allow
        port: 3389
        proto: tcp

    - name: install useful packages 
      apt:
        name: [zsh, fonts-powerline, apt-transport-https, ca-certificates, curl, gnupg, lsb-release, software-properties-common]
        state: latest

    - name: install chrome
      shell: |
        curl -o chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo apt install ./chrome.deb

    - name: set up the docker stable repository
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
        $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null


    - name: Install Docker Engine
      apt:
        name: [docker-ce, docker-ce-cli, containerd.io]
        state: latest
        update_cache: yes

    - name: Verify that Docker Engine is installed correctly by running the hello-world image
      shell: docker run hello-world
      register: dockereg

    - name: print previous command output
      debug:
        var: dockereg.stdout_lines
    
    - name: Add your user to the docker group.
      shell: "usermod -aG docker $USER"

    - name: Download the Google Cloud public signing key
      shell: curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

    - name: Add the Kubernetes apt repository
      shell: echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

    - name: install kubectl
      apt:
        name: kubectl
        state: latest
        update_cache: yes

    - name: install helm
      shell: curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    - name: install minikube
      shell: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb
        sudo dpkg -i minikube_latest_amd64.deb

    - name: Add the HashiCorp GPG key
      shell: curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -

    - name: Add the official HashiCorp Linux repository
      shell: sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"

    - name: Update to add the repository, and install the Terraform CLI & packer
      apt:
        name: [terraform, packer]
        update_cache: yes
        state: latest

    - name: Install pip
      shell: |
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
        python3 get-pip.py
      ignore_errors: yes

    - name: install virtualenv, ansible, docker-compose, sshuttle, tldr and awscli
      shell: pip3 install virtualenv awscli docker-compose ansible sshuttle tldr
      ignore_errors: yes

    - name: install zsh and use it as the default shell
      become: false
      shell: |
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
        sudo usermod -s /bin/zsh $USER
        git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
        echo 'eval "$(mcfly init bash)"' >> .bashrc
        echo 'eval "$(mcfly init zsh)"' >> .zshrc

    - name: install mcfly
      shell: |
        curl -LSfs https://raw.githubusercontent.com/cantino/mcfly/master/ci/install.sh | sh -s -- --git cantino/mcfly
    
    - name: edit zsh plugins
      ignore_errors: yes
      become: false
      ansible.builtin.lineinfile:
        path: ~/.zshrc
        regexp: '^plugins=('
        line: plugins=(git aws docker helm kubectl minikube zsh-autosuggestions)